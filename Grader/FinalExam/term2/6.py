
class Pooh:

    def __init__(self,r,c,b):
    # Constructor รับตัวแปร 3 ตัวประกอบด้วย r, c และ b 
    # r, c คือตำแหน่งแถวและคอลัมน์ที่หมีพูห์อยู่
    # b คือตัวแปรของบอร์ดที่หมีพูห์ตัวนี้อยู่
    # เก็บ r และ c ในตัวแปร self.r และ self.c ตามลำดับ
    # เก็บตัวแปรบอร์ด b ลงใน self.board
    # เก็บหมีพูห์ลงใน self.board ผ่านเมท็อด add_pooh ของคลาส Board 
    # กำหนดให้ตัวแปร self.distance เริ่มต้นเป็น 0    
    # เขียนโปรแกรมต่อจากบรรทัดนี้
        self.r = r
        self.c = c
        self.board = b
        self.board.add_pooh(self)
        self.distance = 0



    def move(self):
    # เลื่อนตำแหน่งของหมีพูห์ไปยังน้ำผึ้งที่อยู่ใกล้ที่สุด
    # ถ้าระยะห่างในแนวคอลัมน์มากกว่าระยะห่างในแนวแถว เลื่อนหมีพูห์เพื่อลดระยะตามแนวคอลัมน์เข้าหาน้ำผึ้ง
    # ถ้าไม่เช่นนั้นให้เลื่อนหมีพูห์เพื่อลดระยะตามแนวแถวเข้าหาน้ำผึ้ง
    # ถ้าเลื่อนแล้วทับกับน้ำผึ้งให้ลบน้ำผึ้งออกจากบอร์ด
    # เพิ่ม self.distance ขึ้น 1 
    # และอื่น ๆ ตามจำเป็น    
    # เขียนโปรแกรมต่อจากบรรทัดนี้
















    def find_closest_honey_pot(self):
    # ห้ามแก้ไขเมท็อดนี้
    return sorted(self.board.honey)[0]

class HoneyPot:
  def __init__(self,r,c,b):
    # Constructor รับอินพุตสามตัวประกอบด้วย r, c และ v
    # r, c คือตำแหน่งแถวและคอลัมน์ที่หมีพูห์อยู่
    # b คือบอร์ดที่เหยือกน้ำผึ้งอยู่
    # เก็บค่า r และ c ในตัวแปร self.r และ self.c ตามลำดับ 
    # เก็บค่า b ในตัวแปร self.board
    # เขียนโปรแกรมต่อจากบรรทัดนี้
    self.r = r
    self.c = c
    






  def __lt__(self,rhs):
    # คืนค่า True ถ้าระยะทางวัดจาก self ไปยังหมีพูห์น้อยกว่าวัดจาก rhs ไปยังหมีพูห์
    # ถ้าระยะทางเท่ากัน ให้คืนค่า True ถ้าแถวของ self น้อยกว่าแถวของ rhs 
    # เขียนโปรแกรมต่อจากบรรทัดนี้
    return 






class Board:
  def __init__(self,r,c):
    # Constructor รับอินพุตสองตัวเป็นจำนวนแถว จำนวนคอลัมน์ของกระดาน
    # เก็บอินพุตทั้งสองตัวในแปร self.row และ self.column 
    # กำหนดให้ self.honey เป็นลิสต์ว่าง
    # เขียนโปรแกรมต่อจากบรรทัดนี้





  def add_pooh(self,p):
    # รับอินพุต p เป็นตัวแปรชนิด Pooh เก็บ p ลงในตัวแปร self.pooh
    # เขียนโปรแกรมต่อจากบรรทัดนี้





  def add_honey(self,h):
    # รับอินพุตเป็นหม้อน้ำผึ้ง h 
    # เพิ่ม h ลงใน self.honey 
    # เขียนโปรแกรมต่อจากบรรทัดนี้






  def __str__(self):
    # __str__ คืนค่าข้อความสองมิติแสดงกระดานปัจจุบัน แสดงตำแหน่งว่างด้วย '.' 
    # แสดงตำแหน่งของหมีพูห์ด้วย 'P' 
    # แสดงตำแหน่งของเหยือกน้ำผึ้งด้วย 'H' 
    # เขียนโปรแกรมต่อจากบรรทัดนี้








# ห้ามแก้ไขบรรทัดต่อไปนี้
b=Board(10,8)
p=Pooh(3,4,b)
HoneyPot(1,1,b)
HoneyPot(7,7,b)
HoneyPot(9,0,b)
# โปรแกรมต่อจากนี้ควรแสดงบอร์ดแต่ละอันหลังจากเคลื่อนที่ของหมีพูห์
print(b)
while len(b.honey) > 0:
    p.move()
    print(b)
print('Pooh moves',p.distance,'units.')